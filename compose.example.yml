services:
  web-ui:
    image: ggmartinez/laravel:php-8.2-apache
    ports:
      - "8000:80"
    volumes:
      - .:/var/www/html
    environment:
      - SKIP_COMPOSER_INSTALL=false
      - SKIP_SEEDERS=true
      - SKIP_MIGRATIONS=false
      - DB_HOST=db
      - DB_DATABASE=laravel
      - DB_USERNAME=laravel
      - DB_PASSWORD=laravel
    depends_on:
      - db
    labels:
      - "traefik.http.routers.myapp.rule=Host(`example.com`)"  
      - "traefik.http.routers.myapp.entrypoints=websecure"
      - "traefik.http.services.myapp.loadbalancer.server.port=80" 
      # Uncomment if want to use Lets Encrypt
      # - "traefik.http.routers.myapp.tls.certresolver=myresolver"
  db:
    image: mysql:8
    environment:
      MYSQL_ROOT_PASSWORD: root
      MYSQL_DATABASE: laravel
      MYSQL_USER: laravel
      MYSQL_PASSWORD: laravel
    ports:
      - "3306:3306"
    volumes:
      - ./mysql:/var/lib/mysql

  # If you want to use traefik as reverse proxy with Let's Encrypt
  # traefik:
  #   image: traefik:v2.6
  #   container_name: traefik
  #   command:
  #     - "--entrypoints.web.address=:80"
  #     - "--entrypoints.websecure.address=:443"
  #     - "--certificatesresolvers.myresolver.acme.httpchallenge.entrypoint=web"
  #     - "--certificatesresolvers.myresolver.acme.email=your-email@example.com"
  #     - "--certificatesresolvers.myresolver.acme.storage=/acme.json"
  #     - "--certificatesresolvers.myresolver.acme.httpchallenge=true"
  #     - "--certificatesresolvers.myresolver.acme.httpchallenge.entrypoint=web"
  #   ports:
  #     - "80:80"
  #     - "443:443"
  #   volumes:
  #     - "./acme.json:/acme.json" 
  #     - "/var/run/docker.sock:/var/run/docker.sock" 


  # If you want to use traefik as reverse proxy with custom certificates
  # traefik:
  #   image: traefik:v2.6
  #   container_name: traefik
  #   command:
  #     - "--entrypoints.web.address=:80"
  #     - "--entrypoints.websecure.address=:443"  
  #     - "--certificatesresolvers.custom.acme.tlschallenge=true"
  #     - "--entrypoints.websecure.http.tls=true"  
  #     - "--entrypoints.websecure.http.tls.certificatesFile=/certs/cert.crt"  
  #     - "--entrypoints.websecure.http.tls.keyFile=/certs/cert.key"  
  #   ports:
  #     - "80:80"
  #     - "443:443" 
  #   volumes:
  #     - "./certs:/certs"
  #     - "/var/run/docker.sock:/var/run/docker.sock"
  #   networks:
  #     - web